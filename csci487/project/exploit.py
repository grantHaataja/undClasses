'''
"Start the exploitation station."

Description: exploit is a software used for gaining unauthorized access to remote\ncomputers. There are different exploits within the framework for the user to choose\nfrom. Upon running the exploit software, user will need to choose the exploit to\ntry, enter the target IP address, enter the port to connect to, and then type\n"run" to attempt the exploit.

Usage: exploit
'''
#Would like 2 different exploit options to start with
#one for 'windoors' systems and one for 'lionux' systems

from funfunctions import dots

def run(*args, **kwargs):
  emptyList = True
  for arg in args:
    if arg:
      emptyList = False
  assert len(args) == 0 or emptyList, "Invalid use of exploit.\n\nUsage: exploit"

  print('***Welcome to the exploitation station***')
  print('Available exploits:')

  exploits = {
    1: 'WD45_702 reverse tcp shell',
    2: 'LI38_612 meta ssh security flaw',
  }

  for i, exploit in exploits.items():
    print("{:2d}. {}".format(i, exploit))

  sel = 0
  while not sel in exploits.keys():
    try:
      sel = int(input("Exploit selection > "))
    except ValueError:
      print("Enter a number")
    
  addr = input("Enter target IP address > ")
  port = -1
  while port < 0:
    try:
      port = int(input("Select port to use > "))
    except ValueError:
      print("Enter a number")
  run = input("Type 'run' to begin expoitation > ")

  if run != 'run':
    return

  dots("Running exploit", 9, 0.333)

  if sel == 1:
    if (addr == '120.45.30.6') and (port == 1100) and (run == 'run') and kwargs['game'].network['120.45.30.6']:
      print("Exploit success.")
      kwargs['game'].network['120.45.30.6'].exploited = True
      kwargs['shell'].run_command(
        kwargs['shell']._get_command_from_str('shell'),
        ['new', '120.45.30.6']
      )
    else:
      # the failure mode
      print("Exploit failed.")


  elif sel == 2:
    # run exploit 2
    if (addr == '120.33.7.242') and (port == 22) and (run == 'run'):
      print("Exploit success.")
      kwargs['game'].network['120.33.7.242'].exploited = True
      kwargs['shell'].run_command(
        kwargs['shell']._get_command_from_str('shell'),
        ['new', '120.33.7.242']
      )
    else:
      # the failure mode
      print("Exploit failed.")